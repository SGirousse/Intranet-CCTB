<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Groupe', 'doctrine');

/**
 * BaseGroupe
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_id
 * @property integer $type_id
 * @property string $intitule
 * @property string $description
 * @property Doctrine_Collection $Groupe
 * @property Type $Type
 * @property Doctrine_Collection $Adresse
 * @property Doctrine_Collection $ContactPro
 * @property Doctrine_Collection $Email
 * @property Doctrine_Collection $Fax
 * @property Doctrine_Collection $Telephone
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method integer             getParentId()    Returns the current record's "parent_id" value
 * @method integer             getTypeId()      Returns the current record's "type_id" value
 * @method string              getIntitule()    Returns the current record's "intitule" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getGroupe()      Returns the current record's "Groupe" collection
 * @method Type                getType()        Returns the current record's "Type" value
 * @method Doctrine_Collection getAdresse()     Returns the current record's "Adresse" collection
 * @method Doctrine_Collection getContactPro()  Returns the current record's "ContactPro" collection
 * @method Doctrine_Collection getEmail()       Returns the current record's "Email" collection
 * @method Doctrine_Collection getFax()         Returns the current record's "Fax" collection
 * @method Doctrine_Collection getTelephone()   Returns the current record's "Telephone" collection
 * @method Groupe              setId()          Sets the current record's "id" value
 * @method Groupe              setParentId()    Sets the current record's "parent_id" value
 * @method Groupe              setTypeId()      Sets the current record's "type_id" value
 * @method Groupe              setIntitule()    Sets the current record's "intitule" value
 * @method Groupe              setDescription() Sets the current record's "description" value
 * @method Groupe              setGroupe()      Sets the current record's "Groupe" collection
 * @method Groupe              setType()        Sets the current record's "Type" value
 * @method Groupe              setAdresse()     Sets the current record's "Adresse" collection
 * @method Groupe              setContactPro()  Sets the current record's "ContactPro" collection
 * @method Groupe              setEmail()       Sets the current record's "Email" collection
 * @method Groupe              setFax()         Sets the current record's "Fax" collection
 * @method Groupe              setTelephone()   Sets the current record's "Telephone" collection
 * 
 * @package    intranet-cctb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseGroupe extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('groupe');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('intitule', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Groupe', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasOne('Type', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $this->hasMany('Adresse', array(
             'local' => 'id',
             'foreign' => 'groupe_id'));

        $this->hasMany('ContactPro', array(
             'local' => 'id',
             'foreign' => 'groupe_id'));

        $this->hasMany('Email', array(
             'local' => 'id',
             'foreign' => 'groupe_id'));

        $this->hasMany('Fax', array(
             'local' => 'id',
             'foreign' => 'groupe_id'));

        $this->hasMany('Telephone', array(
             'local' => 'id',
             'foreign' => 'groupe_id'));
    }
}